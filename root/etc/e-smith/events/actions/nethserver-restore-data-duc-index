#!/bin/bash
#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#
function contains() {
    local n=$#
    local value=${!n}
    for ((i=1;i < $#;i++)) {
        if [ "${!i}" == "${value}" ]; then
            echo "y"
            return 0
        fi
    }
    echo "n"
    return 1
}

INDEX_DIR='/'
DB_DIR='/var/cache/restore'

TS=$(date +%s)
DB_FILE=$DB_DIR'/duc.db'
XML_FILE=$DB_DIR'/duc-'$TS'.xml'
XML_LINK=$DB_DIR'/duc.xml'

BACKUP_NAME=$2
# exit if backup name is different from backup-data
if [ "$BACKUP_NAME" != "backup-data" ]; then
	exit 0
fi

# check if dir exists
if [ ! -d "$DB_DIR" ]; then
	/bin/mkdir -p $DB_DIR
fi

# create backup list to exclude from indexing
EXCLUDE_PATHS=""
for b in $(/sbin/e-smith/db backups keys); do
    EXCLUDE_PATHS="$EXCLUDE_PATHS --exclude=backup-${b}"
done

# indexing (without particular fs and backups)
/usr/bin/duc index $INDEX_DIR --database=$DB_FILE --fs-exclude=sysfs,proc,devtmpfs,tmpfs ${EXCLUDE_PATHS}

DIR_ARRAY=()
FIRST_PART="<?xml version='1.0' encoding='UTF-8'?><duc root='/' size='1000'>"
LAST_PART="</duc>"

echo $FIRST_PART > $XML_FILE
for inc in $(/bin/cat /etc/backup-data.d/*.include | sort); do
    BASE_DIRECTORY=$(echo "$inc" | cut -c 2-)

    if [ $(contains "${DIR_ARRAY[@]}" "$BASE_DIRECTORY") == "n" ]; then
		DIR_ARRAY+=($BASE_DIRECTORY)
		# xml exporting
		CONTENT=$(/usr/bin/duc xml --min_size=0 --exclude-files --database=$DB_FILE /$BASE_DIRECTORY | sed -e "1,2d" | sed -e "$ d")
		TYPE="dir"
		if [ -f "/$BASE_DIRECTORY" ]; then
			TYPE="file"
		fi
		echo "<ent type='$TYPE' name='$BASE_DIRECTORY' size='1000'>$CONTENT</ent>" >> $XML_FILE
	fi
done
echo $LAST_PART >> $XML_FILE

/bin/ln -f $XML_FILE $XML_LINK
