#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use NethServer::ApiTools;
use esmith::ConfigDB;
use JSON;

my %backups;

my $input = NethServer::ApiTools::readInput();
my $output = {};

my $action = $input->{'action'};

if ($action eq 'app-info') {
    my $host = $input->{'location'}->{'hostname'};
    $output = {
        'url' => "https://$host:980/en-US/RestoreData",
    };
} elsif ($action eq 'list-backups') {
    my $dir = '/var/lib/nethserver/backup/restore';
    opendir(DIR, $dir) or die $!;

    while (my $file = readdir(DIR)) {
        # skip . or .. directories
        if($file eq "." || $file eq "..") { next; }

        # get name and date of backup
	    my ($backupName, $backupDate) = split /-/, $file;

        # insert additional info
        my $bdb = esmith::ConfigDB->open_ro('backups');
        $backups{$backupName}{'destination'} = $bdb->get_prop($backupName, 'VFSType');
        $backups{$backupName}{'engine'} = $bdb->get_prop($backupName, 'type');

        if ($backups{$backupName}{'dates'}) {
            # backup exists add dates
            push($backups{$backupName}{'dates'}, int($backupDate));
        } else {
            # create empty dates
            my @dates;
            push(@dates, int($backupDate));
            $backups{$backupName}{'dates'} = \@dates;
        }
    }

    $output = {
        'backups' => \%backups,
    };
    closedir(DIR);
} elsif ($action eq 'list-logs') {
    my @logs = glob('/var/log/backup/*');

    $output = {
        'logs' => \@logs
    }
} else {
    NethServer::ApiTools::error();
}

print encode_json($output);
